TOMAR CUIDADO COM O COMANDO MIGRATE:FRESH, POIS ELE APAGA TODOS OS DADOS DA TABELA,
QUANDO FOR NECESSÁRIO CRIAR UMA NOVA COLUNA NA TABELA, É RECOMENDADO CRIAR UMA NOVA
MIGRATION E RODAR ELA, AO INVÉS DE EXCLUIR TUDO. ESSA DICA É VALIDA PRINCIPALMENTE PARA
AMBIENTE DE PRODUÇÃO, PARA LOCALHOST NÃO HÁ GRANDES PROBLEMAS


PARA EXCLUIR UMA COLUNA/TABELA QUE ACABOU DE SER CRIADA, PORÉM ERRADA, RODAR O COMANDO
MIGRATE:ROLLBACK, ELE IRA EXCLUIR A RECEM CRIADA COLUNA/TABELA E VOCÊ PODE FAZER AS ALTERAÇÕES
NECESSÁRIAS


PARA EXCLUIR TODAS AS TABELAS DE UMA VEZ, RODAR O COMANDO MIGRATE:RESET, ELE VAI EXCLUIR TODAS AS
TABELAS DO BANCO


PARA EXCLUIR TODAS AS TABELAS E RODAR AS MIGRATIONS NOVAMENTE, RODAR O COMANDO MIGRATE:REFRESH



PARA CRIAR DADOS FAKES, CRIAR UMA FACTORY COM O NOME DA MODEL + FACTORY E COLOCAR OS CAMPOS A SEREM PREENCHIDOS PELO FAKER, 
DEPOIS, ABRIR ARTISAN TINKER E RODAR O SEGUINTE COMANDO APP\MODELS\MODEL_NAME::FACTORY()->CREATE()


POR PADRÃO NO LARAVEL, AS ACTIONS (FUNÇÕES) PARA PERSISTÊNCIA DE DADOS NO BANCO SE CHAMAM 'STORE',
AS ACTIONS PARA BUSCA DE DADOS ESPECÍFICOS SE CHAMAM 'SHOW', AS DE FORMULÁRIOS DE CRIAÇÃO SE CHAMAM
'CREATE', E AS INICIAIS SE CHAMAM 'INDEX'


TODA VEZ QUE VOCÊ DEFINIR UM FORMULÁRIO HTML "POST", "PUT", "PATCH", OU "DELETE" NA SUA APLICAÇÃO, VOCÊ DEVE INCLUIR UM 
CAMPO OCULTO CSRF _TOKEN NO FORMULÁRIO ENTÃO ESSE MIDDLEWARE DE PROTEÇÃO CSRF PODERÁ VALIDAR A REQUISIÇÃO. POR CONVENIENCIA, 
VOCÊ PODE USAR A DIRETIVA BLADE @CSRF PARA GERAR O CAMPO OCULTO DE TOKEN